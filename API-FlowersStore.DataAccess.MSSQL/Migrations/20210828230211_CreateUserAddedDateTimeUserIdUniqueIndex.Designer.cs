// <auto-generated />
using System;
using API_FlowersStore.DataAccess.MSSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_FlowersStore.DataAccess.MSSQL.Migrations
{
    [DbContext(typeof(APIFlowersStoreDbContext))]
    [Migration("20210828230211_CreateUserAddedDateTimeUserIdUniqueIndex")]
    partial class CreateUserAddedDateTimeUserIdUniqueIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("Price")
                        .HasPrecision(38, 18)
                        .HasColumnType("decimal(38,18)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Name", "UserId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 8, 29, 4, 2, 10, 951, DateTimeKind.Local).AddTicks(2035),
                            Email = "Admin@gmail.com",
                            Name = "Admin",
                            Password = "Admin",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 8, 29, 4, 2, 10, 952, DateTimeKind.Local).AddTicks(5744),
                            Email = "1-800-Flowers@gmail.com",
                            Name = "1800Flowers",
                            Password = "123",
                            Role = "Provider"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 8, 29, 4, 2, 10, 952, DateTimeKind.Local).AddTicks(5760),
                            Email = "TheBouqs@gmail.com",
                            Name = "TheBouqs",
                            Password = "123",
                            Role = "Provider"
                        });
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Order", b =>
                {
                    b.HasOne("API_FlowersStore.DataAccess.MSSQL.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_FlowersStore.DataAccess.MSSQL.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Product", b =>
                {
                    b.HasOne("API_FlowersStore.DataAccess.MSSQL.Entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Supply", b =>
                {
                    b.HasOne("API_FlowersStore.DataAccess.MSSQL.Entities.Product", "Product")
                        .WithMany("Supplies")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("API_FlowersStore.DataAccess.MSSQL.Entities.User", "User")
                        .WithMany("Supplies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("API_FlowersStore.DataAccess.MSSQL.Entities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");

                    b.Navigation("Supplies");
                });
#pragma warning restore 612, 618
        }
    }
}
